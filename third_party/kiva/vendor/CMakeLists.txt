include(initialize-submodules)
initialize_submodules()

if (NOT TARGET fmt)
    add_subdirectory(fmt)
endif ()

add_subdirectory(boost-1.77.0)

if (KIVA_EXE_BUILD OR KIVA_GROUND_PLOT)

    set(SKIP_INSTALL_ALL ON)
    set(INSTALL_UTILS OFF)
    if (NOT TARGET miniziplib)
        set(ZLIB_ENABLE_TESTS OFF CACHE BOOL "" FORCE)
        set(ZLIB_COMPAT ON CACHE BOOL "" FORCE)
        add_subdirectory(zlib-ng)
        set(ZLIB_LIBRARIES zlibstatic)
        set(ZLIB_INCLUDE_DIRS "${zlib_SOURCE_DIR}" "${zlib_BINARY_DIR}")
        set(ZLIB_INCLUDE_DIR ${ZLIB_INCLUDE_DIRS})
        set(ZLIB_LIBRARY ${ZLIB_LIBRARIES})
        if (MSVC)
            target_compile_options(zlibstatic PRIVATE /wd5105)
            target_compile_options(zlib PRIVATE /wd5105)
        endif ()
        set_target_properties(zlib PROPERTIES EXCLUDE_FROM_ALL 1 EXCLUDE_FROM_DEFAULT_BUILD 1)
    else ()
        set(ZLIB_LIBRARIES miniziplib)
        set(ZLIB_INCLUDE_DIRS "${miniziplib_SOURCE_DIR}" "${miniziplib_BINARY_DIR}")
        set(ZLIB_INCLUDE_DIR ${ZLIB_INCLUDE_DIRS})
        set(ZLIB_LIBRARY ${ZLIB_LIBRARIES})
    endif ()
    set(PNG_BUILD_ZLIB ON CACHE BOOL "" FORCE)

    set(PNG_TESTS OFF CACHE BOOL "" FORCE)
    set(PNG_SHARED OFF CACHE BOOL "" FORCE)
    add_subdirectory(libpng)

    set(enable-openmp OFF CACHE BOOL "" FORCE)
    set(PNG_LIBRARY png_static)
    set(PNG_INCLUDE_DIR "${libpng_SOURCE_DIR}" "${libpng_BINARY_DIR}")
    set(PNG_LIBRARIES ${PNG_LIBRARY})
    set(PNG_INCLUDE_DIRS ${PNG_INCLUDE_DIR})
    add_subdirectory(mathgl-2.4.4)

    if (MSVC)
        target_compile_options(mgl PRIVATE /wd4477 /wd4334)
        target_compile_options(mgl-static PRIVATE /wd4477 /wd4334)
    else ()
        target_compile_options(mgl PRIVATE -Wno-deprecated-declarations -Wno-tautological-constant-out-of-range-compare -Wno-format-security -Wno-unused-result)
        target_compile_options(mgl-static PRIVATE -Wno-deprecated-declarations -Wno-tautological-constant-out-of-range-compare -Wno-format-security -Wno-unused-result)
    endif ()

    set_target_properties(mgl PROPERTIES EXCLUDE_FROM_ALL 1 EXCLUDE_FROM_DEFAULT_BUILD 1)

    if (KIVA_EXE_BUILD)
        set_property(GLOBAL PROPERTY CTEST_TARGETS_ADDED 1)
        set(YAML_BUILD_SHARED_LIBS OFF CACHE BOOL "" FORCE)
        set(YAML_CPP_CLANG_FORMAT_EXE OFF CACHE BOOL "" FORCE)
        set(YAML_CPP_BUILD_TOOLS OFF CACHE BOOL "" FORCE)
        set(YAML_CPP_INSTALL OFF CACHE BOOL "" FORCE)
        set(YAML_MSVC_SHARED_RT OFF CACHE BOOL "" FORCE)
        add_subdirectory(yaml-cpp)

        if (NOT MSVC)
            target_compile_options(yaml-cpp PRIVATE -Wno-shadow -Wno-effc++)
        endif ()
    endif ()
endif ()

if (KIVA_TESTING)
    if (NOT TARGET gtest)
        # Prevent GoogleTest from overriding our compiler/linker options
        # when building with Visual Studio
        set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
        set(BUILD_GTEST ON CACHE BOOL "" FORCE MARK)
        set(BUILD_GMOCK ON CACHE BOOL "" FORCE)
        set(INSTALL_GTEST OFF CACHE BOOL "" FORCE)
        mark_as_advanced(BUILD_GTEST BUILD_GMOCK INSTALL_GTEST)
        add_subdirectory(googletest)
    endif ()
endif ()
