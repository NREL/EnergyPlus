# ARCH argument like arm64, armv7, armv7s, x86_64

VPATH = ../solarpilot

SIM=
ifeq (${ARCH}, i386)
	SIM=true
endif
ifeq (${ARCH}, x86_64)
	SIM=true
endif


ifeq (${SIM}, true)
	ISYSROOT = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk
else
	ISYSROOT = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk  
endif

CC = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc 
CXX = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++
CFLAGS = -I../ -I../nlopt  -DWX_PRECOMP  -arch ${ARCH} -isysroot ${ISYSROOT}  -miphoneos-version-min=10.0 -fembed-bitcode -DNDEBUG -Os -pipe -fPIC 
CXXFLAGS = $(CFLAGS) -std=c++11 -stdlib=libc++


OBJECTS = \
	fluxsim.o \
	API_structures.o \
	Ambient.o \
	AutoPilot_API.o \
	Financial.o \
	Flux.o \
	Heliostat.o \
	IOUtil.o \
	Land.o \
	LayoutSimulateThread.o \
	OpticalMesh.o \
	Receiver.o \
	STObject.o \
	STSimulateThread.o \
	SolarField.o \
	Toolbox.o \
	definitions.o \
	heliodata.o \
	interop.o \
	mod_base.o \
	optimize.o \
	solpos.o \
	string_util.o



TARGET=solarpilot_${ARCH}.a

$(TARGET):$(OBJECTS)
	ar rs $(TARGET) $(OBJECTS)

clean:
	rm -rf $(TARGET) $(OBJECTS)
