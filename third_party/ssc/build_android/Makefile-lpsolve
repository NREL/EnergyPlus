# ARCH argument like armeabi-v7a, x86, (x86_64 > android-20), arm64-v8a

VPATH = ../lpsolve

# OS building
MYARCH=darwin-x86_64

# Default NDK installation location for Android Studio 2.3
NDK = /Users/imacuser/Library/Android/sdk/ndk/21.3.6528147

#target sdk version 
PLATFORMVER=android-23

TARGET_API=23

#
TOOLCHAIN=${NDK}/toolchains/llvm/prebuilt/darwin-x86_64


# select prefixes based on arm or x86
ifeq (${ARCH},x86_64)
	ASM=x86_64-linux-android
	ARCHPREFIX=arch-x86_64
	GCCPREFIX=${ASM}${TARGET_API}
else ifeq (${ARCH},x86)
	ASM=i686-linux-android
	ARCHPREFIX=arch-x86
	GCCPREFIX=${ASM}${TARGET_API}
else ifeq (${ARCH},arm64-v8a)
	ASM=aarch64-linux-android
	ARCHPREFIX=arch-arm64
	GCCPREFIX=${ASM}${TARGET_API}
else ifeq (${ARCH},armeabi-v7a)
	ASM=arm-linux-androideabi
	ARCHPREFIX=arch-arm
	GCCPREFIX=armv7a-linux-androideabi${TARGET_API}
endif	



CC=${TOOLCHAIN}/bin/${GCCPREFIX}-clang
CXX=${TOOLCHAIN}/bin/${GCCPREFIX}-clang++
RANLIB=${TOOLCHAIN}/bin/${ASM}-ranlib
AR=${TOOLCHAIN}/bin/${ASM}-ar

CFLAGS = -I../  -I../lpsolve -DCHECK_SOLUTION -DYY_NEVER_INTERACTIVE -DPARSER_LP -DINVERSE_ACTIVE=INVERSE_LUSOL -DRoleIsExternalInvEngine  -DWX_PRECOMP -DINTEGERTIME --sysroot=${NDK}/platforms/${PLATFORMVER}/${ARCHPREFIX} -fPIC -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -Wa,--noexecstack -Wformat -Werror=format-security  -O2  -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -isystem${NDK}/sources/cxx-stl/llvm-libc++/include -isystem${NDK}/sysroot/usr/include/${ASM} -isystem${NDK}/sysroot/usr/include 
CXXFLAGS = $(CFLAGS) -std=c++11 

OBJECTS = \
	colamd.o \
	commonlib.o \
	fortify.o \
	ini.o \
	lp_crash.o \
	lp_Hash.o \
	lp_lib.o \
	lp_LUSOL.o \
	lp_matrix.o \
	lp_MDO.o \
	lp_mipbb.o \
	lp_MPS.o \
	lp_params.o \
	lp_presolve.o \
	lp_price.o \
	lp_pricePSE.o \
	lp_report.o \
	lp_rlp.o \
	lp_scale.o \
	lp_simplex.o \
	lp_solve.o \
	lp_SOS.o \
	lp_utils.o \
	lp_wlp.o \
	lusol.o \
	mmio.o \
	myblas.o \
	yacc_read.o


TARGET=lpsolve_${ARCH}.a

$(TARGET):$(OBJECTS)
	$(AR) rs $(TARGET) $(OBJECTS)

clean:
	rm -rf $(TARGET) $(OBJECTS)
