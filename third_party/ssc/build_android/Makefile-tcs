# ARCH argument like armeabi, armeabi-v7a, x86 (x86_64 > android-20)

VPATH = ../tcs

# OS building
MYARCH=darwin-x86_64

# Default NDK installation location for Android Studio 2.3
NDK = /Users/imacuser/Library/Android/sdk/ndk/21.3.6528147

#target sdk version 
PLATFORMVER=android-23

TARGET_API=23
#min sdk version


#
TOOLCHAIN=${NDK}/toolchains/llvm/prebuilt/darwin-x86_64


# select prefixes based on arm or x86
ifeq (${ARCH},x86_64)
	ASM=x86_64-linux-android
	ARCHPREFIX=arch-x86_64
	GCCPREFIX=${ASM}${TARGET_API}
else ifeq (${ARCH},x86)
	ASM=i686-linux-android
	ARCHPREFIX=arch-x86
	GCCPREFIX=${ASM}${TARGET_API}
else ifeq (${ARCH},arm64-v8a)
	ASM=aarch64-linux-android
	ARCHPREFIX=arch-arm64
	GCCPREFIX=${ASM}${TARGET_API}
else ifeq (${ARCH},armeabi-v7a)
	ASM=arm-linux-androideabi
	ARCHPREFIX=arch-arm
	GCCPREFIX=armv7a-linux-androideabi${TARGET_API}
endif	



CC=${TOOLCHAIN}/bin/${GCCPREFIX}-clang
CXX=${TOOLCHAIN}/bin/${GCCPREFIX}-clang++
RANLIB=${TOOLCHAIN}/bin/${ASM}-ranlib
AR=${TOOLCHAIN}/bin/${ASM}-ar

CFLAGS =  -I../ -I../nlopt -I../shared -I../lpsolve -I../solarpilot --sysroot=${NDK}/platforms/${PLATFORMVER}/${ARCHPREFIX} -fPIC -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -Wa,--noexecstack -Wformat -Werror=format-security   -std=gnu++11 -O2  -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,--fix-cortex-a8 -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -isystem${NDK}/sources/cxx-stl/llvm-libc++/include -isystem${NDK}/sysroot/usr/include/${ASM} -isystem${NDK}/sysroot/usr/include 
CXXFLAGS = $(CFLAGS) -std=c++11 
 

OBJECTS = atmospheric_aod.o \
		co2_compressor_library.o \
		CO2_properties.o \
		csp_dispatch.o \
		csp_radiator.o \
		csp_solver_core.o \
		csp_solver_gen_collector_receiver.o \
		csp_solver_lf_dsg_collector_receiver.o \
		csp_solver_mono_eq_methods.o \
		csp_solver_mspt_collector_receiver.o \
		csp_solver_mspt_receiver.o \
		csp_solver_mspt_receiver_222.o \
		csp_solver_pc_gen.o \
		csp_solver_pc_heat_sink.o \
		csp_solver_pc_Rankine_indirect_224.o \
		csp_solver_pc_sco2.o \
		csp_solver_pc_steam_heat_sink.o \
		csp_solver_pt_heliostatfield.o \
		csp_solver_pt_receiver.o \
		csp_solver_pt_sf_perf_interp.o \
		csp_solver_stratified_tes.o \
		csp_solver_tou_block_schedules.o \
		csp_solver_trough_collector_receiver.o \
		csp_solver_two_tank_tes.o \
		csp_solver_util.o \
		csp_solver_weatherreader.o \
		csp_system_costs.o \
		direct_steam_receivers.o \
		fmin.o \
		fmin_callbacks.o \
		heat_exchangers.o \
		Heliostat_AzElAod.o \
		interconnect.o \
		nlopt_callbacks.o \
		numeric_solvers.o \
		sam_mw_pt_heliostatfield_csp_solver.o \
		sam_sco2_recomp_type424.o \
		sam_type250_input_generator.o \
		sco2_cycle_components.o \
		sco2_partialcooling_cycle.o \
		sco2_pc_csp_int.o \
		sco2_power_cycle.o \
		sco2_rec_util.o \
		sco2_recompression_cycle.o \
		sco2_test_type401.o \
		tc_test_type402.o \
		tcskernel.o \
		trnsys_weatherreader.o \
		typelib.o \
		ud_power_cycle.o \
		water_properties.o \
		waterprop.o \
		weatherreader_csp_solver.o \
		cavity_calcs.o \
		datatest.o \
		direct_steam_receivers.o \
		htf_props.o \
		interpolation_routines.o \
		ngcc_powerblock.o \
		powerblock.o \
		pump.o \
		sam_csp_util.o \
		sam_dsg_controller_type265.o \
		sam_iscc_parasitics.o \
		sam_iscc_powerblock.o \
		sam_lf_st_pt_type232.o \
		sam_mw_csp_SumCalcs.o \
		sam_mw_gen_Type260_csp_solver.o \
		sam_mw_lf_type261_steam.o \
		sam_mw_lf_type261_Wnet.o \
		sam_mw_lf_type262_salt.o \
		sam_mw_pt_type222_csp_solver.o \
		sam_mw_pt_type224_csp_solver.o \
		sam_mw_pt_type228.o \
		sam_mw_trough_type250.o \
		sam_mw_trough_type251.o \
		sam_mw_type234.o \
		sam_pf_dish_collector_type295.o \
		sam_pf_dish_engine_type297.o \
		sam_pf_dish_parasitic_type298.o \
		sam_pf_dish_receiver_type296.o \
		sam_trough_model_type805.o \
		sam_trough_plant_type807.o \
		sam_trough_storage_type806.o \
		solarcollector.o \
		storage_hx.o \
		sumprod.o \
		thermocline_tes.o \
		tou_translator.o \
		flat_plate_solar_collector.o

TARGET=tcs_${ARCH}.a

$(TARGET):$(OBJECTS)
	$(AR) rs $(TARGET) $(OBJECTS)

clean:
	rm -rf $(TARGET) $(OBJECTS)
